"""
Задание 4.

Для этой задачи:
1) придумайте 2-3 решения (обязательно с различной сложностью)
2) оцените сложность каждого выражения в этих решениях в нотации О-большое
3) оцените итоговую сложность каждого решения в нотации О-большое
4) сделайте вывод, какое решение эффективнее и почему

Сама задача:
Пользователи веб-ресурса проходят аутентификацию.
В системе хранятся логин, пароль и отметка об активации учетной записи.

Нужно реализовать проверку, может ли пользователь быть допущен к ресурсу.
При этом его учетка должна быть активирована.
А если нет, то польз-лю нужно предложить ее пройти.

Приложение должно давать ответы на эти вопросы
 и быть реализовано в виде функции.
Для реализации хранилища можно применить любой подход,
который вы придумаете, например, применить словарь.

Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
"""
users = {
    'Sergey': {'password': '1a23asf45', 'is_active': True},
    'Marya': {'password': '54asf5321', 'is_active': True},
    'Darya': {'password': 'asd1564f', 'is_active': True},
    'Aleksandr': {'password': '7a7asd68', 'is_active': False},
    'Michail': {'password': 'afqf546', 'is_active': False},
    'Dmitry': {'password': 'asf9742', 'is_active': False},
}


#  Алгоритм 1. Сложность O(n^2)
def verification(name, password, users=users):
    users_list = list(users)  # O(n)
    if name in users_list:  # O(n)
        if password == users[name]['password'] \
                and users[name]['is_active'] == True:  # O(1)
            print(f'Доступ пользователю {name} разрешен')  # O(1)
        else:
            print(
                f'Неверный пароль для пользователя {name}. Доступ запрещен!')  # O(1)
    else:
        print(
            f'Пользователь {name} не обнаружен, пройдите регистрацию')  # O(1)


# Проверка
# Верный пользователь
verification('Darya', 'asd1564f')
# Неверный пользователь
verification('Alexey', 'asd1564f')
# Неверный пароль
verification('Michail', 'asd1564f')


#  Алгоритм 2. Сложность O(1), более эффективен т.к. меньше сложность
def verification2(name, password, users=users):
    if users.get(name):  # O(1)
        if password == users[name]['password'] \
                and users[name]['is_active'] == True:  # O(1)
                print(f'Доступ пользователю {name} разрешен')  # O(1)
        else:
            print(f'Неверный пароль для пользователя {name} '
                  f'или доступ запрещен!')  # O(1)
    else:
        print(f'Пользователь {name} не обнаружен, пройдите регистрацию')  # O(1)


# Проверка
# Верный пользователь
verification2('Darya', 'asd1564f')
# Неверный пользователь
verification2('Alexey', 'asd1564f')
# Неверный пароль
verification2('Michail', 'asd1564f')
